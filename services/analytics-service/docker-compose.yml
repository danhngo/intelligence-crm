# yaml-language-server: $schema=https://raw.githubusercontent.com/compose-spec/compose-spec/master/schema/compose-spec.json
name: analytics-service
version: '3.9'

x-healthcheck-config: &healthcheck-config
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 40s

services:
  analytics:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: analytics-service-api
    ports:
      - "${ANALYTICS_PORT:-8004}:8000"
    volumes:
      - .:/app
      - /app/__pycache__  # Don't mount pycache
    environment:
      - DATABASE_URL=${ANALYTICS_DATABASE_URL:-postgresql+asyncpg://postgres:postgres@db:5432/analytics}
      - REDIS_URL=${ANALYTICS_REDIS_URL:-redis://redis:6379/0}
      - SECRET_KEY=${SECRET_KEY:-analytics-secret-key}
      - DEBUG=${DEBUG:-false}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      <<: *healthcheck-config
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    restart: unless-stopped
    networks:
      - analytics-network

  db:
    image: postgres:15-alpine
    container_name: analytics-db
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-analytics}
    ports:
      - "${ANALYTICS_DB_PORT:-5435}:5432"
    volumes:
      - analytics_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      <<: *healthcheck-config
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    restart: unless-stopped
    networks:
      - analytics-network

  redis:
    image: redis:7-alpine
    container_name: analytics-redis
    ports:
      - "${ANALYTICS_REDIS_PORT:-6380}:6379"
    volumes:
      - analytics_redis_data:/data
    healthcheck:
      <<: *healthcheck-config
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M
    restart: unless-stopped
    networks:
      - analytics-network
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru

volumes:
  analytics_data:
    name: analytics-data
  analytics_redis_data:
    name: analytics-redis-data

networks:
  analytics-network:
    name: analytics-network
    driver: bridge
